name: Check & deploy to DockerHub

on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  workflow_dispatch:

jobs:
  perform-check:
    uses: ./.github/workflows/test_lint.yml
  docker:
    runs-on: ubuntu-latest
    environment: DockerHub
    strategy:
      matrix:
        configurations:
          - dockerfile: "Dockerfile"
            device-tags: |
              ""
              "cuda"
              "cuda12.1"
            device-args: |
              CUDA_VERSION=12.1
          - dockerfile: "Dockerfile"
            device-tags: '"cuda11.8"'
            device-args: |
              CUDA_VERSION=11.8
          - dockerfile: "cpu-only.Dockerfile"
            device-tags: '"cpu"'
            device-args: ""
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: pk5ls21/fxxk-docker
          tags: |
            type=schedule
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set Combined Tags
        run: |
          $SUFFIXES=${{ matrix.configurations.device-tags }}
          echo 'GITHUB_COMBINED_TAGS=<<EOF' >> $GITHUB_ENV
          for SUFFIX in "${SUFFIXES[@]}"; do
            echo '${{ steps.docker-meta.outputs.tags }}' | sed 's/$/'"$SUFFIX"'/' >> $GITHUB_ENV
          done
          echo EOF >> $GITHUB_ENV
          # json_base64=$(echo '${{ steps.docker-meta.outputs.json }}' | base64 -w 0)
          # device_tags_base64=$(echo '${{ matrix.configurations.device-tags }}' | base64 -w 0)
          # output=$(python .github/workflows/paste_tags.py "$json_base64" "$device_tags_base64")
          # echo "GITHUB_COMBINED_TAGS=$output" >> $GITHUB_ENV
      - name: echo tags
        run:  echo ${{ env.GITHUB_COMBINED_TAGS }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.configurations.dockerfile }}
          push: true
          tags: ${{ env.GITHUB_COMBINED_TAGS }}
          build-args: ${{ matrix.configurations.device-args }}
